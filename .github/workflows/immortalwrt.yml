#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================


name: Build immortalwrt
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/immortalwrt.yml'
      - 'diy-openwrt.sh'
      - 'x86-64-immortalwrt.config'
  schedule:
    - cron: 0 9/24 * * 5

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  TZ: Asia/Shanghai

jobs:
  x86:
    runs-on: ubuntu-latest
    steps:    
    - name: Prepare environment.
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
          #sudo swapoff /swapfile
            docker rmi `docker images -q`
            sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
            sudo -E apt-mark hold grub-efi-amd64-signed
            sudo -E apt update
            sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
            sudo -E apt -y full-upgrade
            sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
            sudo -E systemctl daemon-reload
            sudo -E apt -y autoremove --purge
            sudo -E apt clean
            sudo -E timedatectl set-timezone "Asia/Shanghai"
            
    - name: Checkout
      uses: actions/checkout@master    
    
    - name: Clone source and install
      run: |
        git clone --depth=1 -b openwrt-23.05 --single-branch https://github.com/immortalwrt/immortalwrt openwrt
        cd openwrt
        ./scripts/feeds update -a
                
    - name: Download and Load custom configuration
      run: |
        cd openwrt
        mv ../diy-openwrt.sh diy.sh
        chmod +x diy.sh
        ./diy.sh
        cp ../x86-64-immortalwrt.config ./.config
        make defconfig
        
    - name: Download package
      run: |
        cd openwrt
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        sudo df -h
        
    - name: Multi-core compile
      run: |
        cd openwrt
        sudo df -h
        echo -e "$(nproc) thread compile"
        
        make -j$(nproc)
        sudo df -h
        
    - name: Single-core compile
      if: failure()
      run: |
        sudo df -h
        cd openwrt
        make -j1 V=s
        sudo df -h
    - name: Get current date
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV 
    - name: Upload entire bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: ${{ env.date3 }}_small_openwrt-x86_64-bin-dictionary
        path: openwrt/bin
        
    - name: Setup Upload dictionary
      if: always()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$(pwd)" >> $GITHUB_ENV
        
    - name: Only Upload firmware (Without packages)
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: ${{ env.date3 }}_x86_64_small
        path: ${{ env.FIRMWARE }}
    
    
    - name: Upload firmware to cowtransfer
      if: always()
      continue-on-error: true
      run: |
        curl -fsSL git.io/file-transfer | sh
        cowurl=$(./transfer cow --block 2621440 -s --no-progress ${FIRMWARE})
        cowurl=$(echo $cowurl | grep -o -E "https[^ ]*")
        echo "COWURL=$cowurl" >> $GITHUB_ENV
        echo "奶牛Download Link: $cowurl  🚀"
        weturl=$(./transfer wet -s -p 16 --no-progress ${FIRMWARE})
        weturl=$(echo $weturl | grep -o -E "https[^ ]*")
        echo "WETURL=$weturl" >> $GITHUB_ENV
        echo "wet Download Link: $weturl  🚀"


    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo -e "墙内外加速下载 🎈:\n" >> release.txt
        echo "🔗 [Cowtransfer](${{ env.COWURL }})" >> release.txt
        echo "🔗 [WeTransfer](${{ env.WETURL }})" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: ${{ env.date2 }} ${{matrix.target}}
        tag_name: ${{ env.date }}_x86_64_immortalwrt
        body_path: release.txt
          
#     - name: WeChat notification
#       run: |
#         [ ${{ env.status }} == 'success' ] && curl https://sc.ftqq.com/SCU31388T7e7d32f3d89ef0033572ec592da40a6f5b84e595389ee.send?text=🎉OpenWrt_${{ env.date3 }}_x86_64编译完成😋 || curl https://sc.ftqq.com/SCU31388T7e7d32f3d89ef0033572ec592da40a6f5b84e595389ee.send?text=❌OpenWrt_${{ env.date3 }}__x86_64编译失败😂
